name: 'Azure: Deploy StreamX'

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.4"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up homebrew
        uses: 'Homebrew/actions/setup-homebrew@master'

      - name: Install StreamX via Homebrew
        run: |
          brew install streamx-dev/preview-tap/streamx

      - name: "Deploy StreamX"
        id: deploy-streamx
        env:
          ARM_ACCESS_KEY:
            ${{ secrets.ARM_ACCESS_KEY }}
          ARM_CLIENT_ID:
            ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET:
            ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID:
            ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID:
            ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_resource_group_name:
            ${{ vars.TF_VAR_RESOURCE_GROUP_NAME }}
          TF_VAR_location:
            ${{ vars.TF_VAR_location }}
          TF_VAR_user_identity_id:
            ${{ vars.TF_VAR_USER_IDENTITY_ID }}
          TF_VAR_public_ip_address:
            ${{ vars.TF_VAR_PUBLIC_IP_ADDRESS }}
          TF_VAR_public_ip_id:
            ${{ vars.TF_VAR_PUBLIC_IP_ID }}
          TF_VAR_cert_manager_lets_encrypt_issuer_acme_email:
            ${{ vars.TF_VAR_cert_manager_lets_encrypt_issuer_acme_email }}
          TF_VAR_streamx_operator_image_pull_secret_registry_email:
            ${{ vars.TF_VAR_streamx_operator_image_pull_secret_registry_email }}
          TF_VAR_streamx_operator_image_pull_secret_registry_password:
            ${{ secrets.TF_VAR_streamx_operator_image_pull_secret_registry_password }}
        run: |
          terraform/scripts/deploy-streamx.sh
          echo "kubeconfig_path=$(terraform -chdir=./terraform/azure/platform output -raw kubeconfig_path)" >> $GITHUB_OUTPUT
          echo "streamx_ingress_ip=$(terraform -chdir=./terraform/azure/platform output -raw loadbalancer_ip)" >> $GITHUB_OUTPUT

      - name: "Ingest content"
        run: terraform/scripts/cloud-publish-all.sh

      - name: "Create Job Summary"
        env:
          KUBECONFIG: ${{ steps.deploy-streamx.outputs.kubeconfig_path }}
        run: |
          WEB_HOST=$(kubectl get ingress sx-del-blueprint-web -o jsonpath='{.spec.rules[0].host}')
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Deployment Status: Success âœ…" >> $GITHUB_STEP_SUMMARY
          echo "- Demo URL: https://$WEB_HOST" >> $GITHUB_STEP_SUMMARY
          echo "- Load balancer IP: ${{ steps.deploy-streamx.outputs.streamx_ingress_ip }}" >> $GITHUB_STEP_SUMMARY
